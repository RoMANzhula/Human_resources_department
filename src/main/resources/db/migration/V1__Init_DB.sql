create sequence hibernate_sequence start 1 increment 1;

create table message (
    create_date timestamp(6) not null,
    id bigint not null,
    user_id bigint,
    file_name varchar(255),
    text varchar(2048),
    topic varchar(255),
    primary key (id)
);

create table scheduler (
    completed boolean not null,
    reminder_sent boolean not null,
    completion_date timestamp(6),
    create_date timestamp(6) not null,
    deadline timestamp(6),
    id bigserial not null,
    user_id bigint,
    task_text varchar(2048),
    task_topic varchar(255),
    primary key (id)
);

create table user_role (
    user_id bigint not null,
    user_roles varchar(255)
    check (user_roles in ('ADMIN','CEO','CTO','CFO','CMO','COO','TECHNICAL_DIRECTOR','PROJECT_MANAGER',
    'SOFTWARE_ARCHITECT','QA_ENGINEER','UI_UX_DESIGNER','OPERATIONS_DIRECTOR','DEVOPS_ENGINEER',
    'NETWORK_AND_SYSTEM_ADMIN','TECHNICAL_SUPPORT','BUSINESS_DEVELOPMENT_MANAGER','BUSINESS_ANALYST',
    'SALES_MANAGER','COMMUNICATIONS_AND_PR_SPECIALIST','INTERNET_MARKETER','FINANCE_ANALYST',
    'ACCOUNTANT','FINANCIAL_MANAGER','HR_DIRECTOR','RECRUITER','RESEARCH_AND_DEVELOPMENT_DIRECTOR',
    'RESEARCH_AND_DEVELOPMENT_SPECIALIST','PRODUCT_ARCHITECT','LAWYER','IT_SECURITY_SPECIALIST',
    'HR_MANAGER','JAVA_DEVELOPER','JAVASCRIPT_DEVELOPER','TEAM_LEAD_JAVA','TEAM_LEAD_JAVASCRIPT'))
);

create table usr (
    active boolean not null,
    id bigint not null GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1),
    reg_date timestamp(6) not null,
    activation_code varchar(255),
    email varchar(255) not null,
    password varchar(255) not null,
    phone varchar(255),
    secret_code_with_registration varchar(255),
    username varchar(255) not null,
    primary key (id)
);

create table employee (
    active boolean not null,
    id bigint not null GENERATED BY DEFAULT AS IDENTITY(
        INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1),
    recruiter_id bigint,
    reg_date timestamp(6) not null,
    email varchar(255),
    file_photo varchar(255),
    first_name varchar(255),
    last_name varchar(255),
    phone varchar(255),
    second_name varchar(255),
    secret_code_for_role varchar(255),
    primary key (id)
);

create table employee_role (
    employee_id bigint not null,
    employee_roles varchar(255)
    check (employee_roles in ('ADMIN','CEO','CTO','CFO','CMO','COO','TECHNICAL_DIRECTOR','PROJECT_MANAGER',
    'SOFTWARE_ARCHITECT','QA_ENGINEER','UI_UX_DESIGNER','OPERATIONS_DIRECTOR','DEVOPS_ENGINEER',
    'NETWORK_AND_SYSTEM_ADMIN','TECHNICAL_SUPPORT','BUSINESS_DEVELOPMENT_MANAGER','BUSINESS_ANALYST',
    'SALES_MANAGER','COMMUNICATIONS_AND_PR_SPECIALIST','INTERNET_MARKETER','FINANCE_ANALYST',
    'ACCOUNTANT','FINANCIAL_MANAGER','HR_DIRECTOR','RECRUITER','RESEARCH_AND_DEVELOPMENT_DIRECTOR',
    'RESEARCH_AND_DEVELOPMENT_SPECIALIST','PRODUCT_ARCHITECT','LAWYER','IT_SECURITY_SPECIALIST',
    'HR_MANAGER','JAVA_DEVELOPER','JAVASCRIPT_DEVELOPER','TEAM_LEAD_JAVA','TEAM_LEAD_JAVASCRIPT'))
);


alter table if exists message
    add constraint message_user_id_fk
    foreign key (user_id) references usr;

alter table if exists scheduler
    add constraint scheduler_user_id_fk
    foreign key (user_id) references usr;

alter table if exists user_role
    add constraint user_role_user_id_fk
    foreign key (user_id) references usr;

alter table if exists employee
    add constraint employee_recruiter_id_fk
    foreign key (recruiter_id) references usr;

alter table if exists employee_role
    add constraint employee_role_employee_id_fk
    foreign key (employee_id) references employee;
